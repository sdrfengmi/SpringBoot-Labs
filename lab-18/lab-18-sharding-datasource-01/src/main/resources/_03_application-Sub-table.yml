# 读写分离一主多从+分库分表
sharding:
  jdbc:
    datasource:
      #druid相关配置
      druid:
        #配置初始化大小/最小/最大
        initial-size: 1
        min-idle: 1
        max-active: 50
        #获取连接等待超时时间
        max-wait: 60000
        #间隔多久进行一次检测，检测需要关闭的空闲连接
        time-between-eviction-runs-millis: 60000
        #一个连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 'x'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
      # 多数据源 {ds0}
      names: ds0,ds1,ds2
      #主库
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/master_ds_0?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: root
      #从库1
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3307/master_ds_0?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: root
      #从库2
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3308/master_ds_0?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: root
    config:
      masterslave:
        # 配置从库选择策略，提供轮询与随机，这里选择用轮询
        load-balance-algorithm-type: round_robin
        #这个名字自定义就行了
        name: boot-sharding
        master-data-source-name: ds0
        slave-data-source-names: ds1,ds2
      sharding:
        props:
          sql.show: true
        tables:
          t_user:  #t_user表
            key-generator-column-name: id  #主键  默认使用雪花算计生成唯一Id
            actual-data-nodes: ds0.t_user${0..1}    #数据节点,均匀分布
            table-strategy:  #分表策略
              inline: #行表达式
                sharding-column: sex
                algorithm-expression: t_user${sex % 2}  #按模运算分配